#!/bin/bash

# sysinfo_page - Produces an html file

# here script: form of I/O redirection

# - causes bash to ignore leading tabs (not spaces)

#### Constants

title="System Information for"
RIGHT_NOW=$(date +"%x %r %Z")
TIME_STAMP="Updated on $RIGHT_NOW by $USER"

#### Functions

system_info()
{
    echo "<h2>System release info</h2>"
    echo "<p>Function not yet implemented</p>"
}

show_uptime()
{
    echo "<h2>System uptime</h2>"
    echo "<pre>"
    uptime
    echo "</pre>"
}

drive_space()
{
    echo "<h2>Filesystem space</h2>"
    echo "<pre>"
    df
    echo "</pre>"
}

home_space()
{
    # only the superuser can get this information

    if [ $(id -u) = "0" ]; then
        echo "<h2>Home directory space by user</h2>"
        echo "<pre>"
        echo "Bytes Directory"
        du -s /Users/* | sort -nr
        echo "</pre>"
    fi

    # end of home_space
}

write_pate()
{
    cat <<- _EOF_
    <html>
        <head>
            <title>
            $title
            </title>
        </head>

        <body>
            <h1>$title $HOSTNAME</h1>
            <p>$TIME_STAMP</p>
            $(system_info)
            $(show_uptime)
            $(drive_space)
            $(home_space)
        </body>
    </html>
_EOF_

}

usage()
{
    echo "usage: sysinfo_page [[[-f file] [-i]] | [-h]]"
}


#### Main

interactive=
filename=~/system_info.html

while [ "$1" != "" ]; do
    case $1 in
        -f | --file ) shift
            filename=$1
            ;;
        -i | --interactive ) interactive=1
            ;;
        -h | --help )   usage
            exit
            ;;
        * ) usage
            exit 1
    esac
    shift
done

# Test code to verify command line processing

if [ "$interactive" = "1" ]; then
    echo "interactive is on"
else
    echo "interactive is off"
fi
echo "output file = $filename"

# write page (comment out until testing is complete

# write_page > $filename

